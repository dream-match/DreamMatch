rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() { 
        return request.auth != null;
    }
    function isUserAuthenticated(userId) { 
        return isAuthenticated() && userId == request.auth.uid;
    }
    function isValidUser(user) {
        return  'createdAt' in user 
        && 'email' in user && user.email is string
        && 'uid' in user && user.uid is string
        && "name" in user && user.name is string;
    }
   match /users/{userId} {
        allow update: if isUserAuthenticated(userId); 
        allow create: if isAuthenticated()
        && isValidUser(request.resource.data)
        && isUserAuthenticated(userId);
        allow read: if true;
    }
    match /posts/{id}{
      allow write: if isAuthenticated() 
      && "uid" in request.resource.data
      && request.resource.data.uid == request.auth.uid;
      allow delete: if isAuthenticated() && get(/databases/$(database)/documents/posts/$(id)).data.uid==request.auth.uid;
      allow read: if true;
    }
  }
}